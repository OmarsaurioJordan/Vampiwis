<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>d_base0</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if m_editor {
    ini_open("editor.ini");
}
else {
    ini_open("mapa.ini");
}
seleccion = real(ini_read_string("seleccion", "s", "0"));
var xx, yy;
var n = 0;
var nn = "obj" + string(n);
while ini_section_exists(nn) {
    xx = real(ini_read_string(nn, "x", "0"));
    yy = real(ini_read_string(nn, "y", "0"));
    switch ini_read_string(nn, "t", "") {
        case "o_pozo": instance_create(xx, yy, o_pozo); break;
        case "o_torre": instance_create(xx, yy, o_torre); break;
        case "o_lapida": instance_create(xx, yy, o_lapida); break;
        case "o_arbol": instance_create(xx, yy, o_arbol); break;
        case "o_casa": instance_create(xx, yy, o_casa); break;
        case "o_cripta": instance_create(xx, yy, o_cripta); break;
        case "o_reja": instance_create(xx, yy, o_reja); break;
        case "o_hongo": instance_create(xx, yy, o_hongo); break;
        case "o_helecho": instance_create(xx, yy, o_helecho); break;
        case "o_fogata": instance_create(xx, yy, o_fogata); break;
        case "o_flor": instance_create(xx, yy, o_flor); break;
        case "o_piedra": instance_create(xx, yy, o_piedra); break;
        case "o_calabaza": instance_create(xx, yy, o_calabaza); break;
        case "o_muro": instance_create(xx, yy, o_muro); break;
        case "o_vela": instance_create(xx, yy, o_vela); break;
        case "o_espejo": instance_create(xx, yy, o_espejo); break;
    }
    n++;
    nn = "obj" + string(n);
}
ini_close();
repeat 7 {
    instance_create(random(room_width), random(room_height), o_gato);
}
repeat 14 {
    instance_create(random(room_width), random(room_height), o_insecto);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Comando
if mygp != -1 {
    var xm = gamepad_axis_value(mygp, gp_axislh);
    var ym = gamepad_axis_value(mygp, gp_axislv);
    if xm != 0 or ym != 0 {
        var ddd = point_direction(0, 0, xm, ym);
        var lll = m_mouse_vel * dltg;
        x += lengthdir_x(lll, ddd);
        y += lengthdir_y(lll, ddd);
    }
}
else if room == w_pc {
    x = mouse_x;
    y = mouse_y;
}
else {
    var xm = device_mouse_x_to_gui(0);
    var ym = device_mouse_y_to_gui(0);
    var vx = 128;
    var vy = view_hview[0] / 2;
    var lll = point_distance(vx, vy, xm, ym);
    if lll &lt; 128 {
        var ddd = point_direction(vx, vy, xm, ym);
        lll *= view_wview[0] / 256;
        x = view_xview[0] + view_wview[0] / 2 + lengthdir_x(lll, ddd);
        y = view_yview[0] + view_hview[0] / 2 + lengthdir_y(lll, ddd);
    }
    else {
        xm = device_mouse_x_to_gui(1);
        ym = device_mouse_y_to_gui(1);
        lll = point_distance(vx, vy, xm, ym);
        if lll &lt; 128 {
            var ddd = point_direction(vx, vy, xm, ym);
            lll *= view_wview[0] / 256;
            x = view_xview[0] + view_wview[0] / 2 + lengthdir_x(lll, ddd);
            y = view_yview[0] + view_hview[0] / 2 + lengthdir_y(lll, ddd);
        }
    }
}
var xx = view_xview[0] + view_wview[0] / 2;
var yy = view_yview[0] + view_hview[0] / 2;
var ll = point_distance(x, y, xx, yy);
if ll &gt; view_wview[0] / 2 {
    direction = point_direction(x, y, xx, yy);
    ll -= view_wview[0] / 2;
    x += lengthdir_x(ll, direction);
    y += lengthdir_y(ll, direction);
}
depth = -y;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Editor
if m_editor {
    if keyboard_check_pressed(vk_up) {
        seleccion++;
        if seleccion &gt;= sprite_get_number(d_solido) {
            seleccion = 0;
        }
    }
    else if keyboard_check_pressed(vk_down) {
        seleccion--;
        if seleccion &lt; 0 {
            seleccion = sprite_get_number(d_solido) - 1;
        }
    }
    else if keyboard_check_pressed(vk_space) {
        switch seleccion {
            case 0: instance_create(x, y, o_cripta); break;
            case 1: instance_create(x, y, o_fogata); break;
            case 2: instance_create(x, y, o_vela); break;
            case 3: instance_create(x, y, o_espejo); break;
            case 4: instance_create(x, y, o_muro); break;
            case 5: instance_create(x, y, o_reja); break;
            case 6: instance_create(x, y, o_hongo); break;
            case 7: instance_create(x, y, o_calabaza); break;
            case 8: instance_create(x, y, o_piedra); break;
            case 9: instance_create(x, y, o_helecho); break;
            case 10: instance_create(x, y, o_flor); break;
            case 11: instance_create(x, y, o_lapida); break;
            case 12: instance_create(x, y, o_torre); break;
            case 13: instance_create(x, y, o_casa); break;
            case 14: instance_create(x, y, o_arbol); break;
            case 15: instance_create(x, y, o_pozo); break;
        }
    }
    else if keyboard_check_pressed(vk_backspace) {
        var otr = instance_place(x, y, o_decorado);
        if otr == noone {
            otr = instance_place(x, y, o_bloque);
        }
        if otr != noone {
            with otr {
                instance_destroy();
            }
        }
    }
    else if keyboard_check_pressed(vk_enter) {
        if file_exists("editor.ini") {
            file_delete("editor.ini");
        }
        ini_open("editor.ini");
        var n = 0;
        with o_decorado {
            ini_write_string("obj" + string(n), "x", string(x));
            ini_write_string("obj" + string(n), "y", string(y));
            ini_write_string("obj" + string(n), "t", object_get_name(object_index));
            n++;
        }
        with o_bloque {
            ini_write_string("obj" + string(n), "x", string(x));
            ini_write_string("obj" + string(n), "y", string(y));
            ini_write_string("obj" + string(n), "t", object_get_name(object_index));
            n++;
        }
        ini_write_string("seleccion", "s", string(seleccion));
        ini_close();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if view_current != 0 { exit; }
if m_editor {
    draw_sprite_ext(d_solido, seleccion, x, y, 1, 1, 0, c_white, 0.5);
}
else if !o_control.finalizado {
    if s_puede_teleportar() {
        draw_sprite(d_mouse, 1, x, y);
    }
    else {
        draw_sprite(d_mouse, 0, x, y);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
