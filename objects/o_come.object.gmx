<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_bloque</parentName>
  <maskName>d_base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
s_ani_ini(id, 1, 0); // flota espectro con infante
campesino = choose(1, 1, 1, 0, 0, 0, 0, 2, 3);
forma = 0; // 0:vampiro, 1:espectro, 2:bestia
campesino_sangre = m_hum_sangre;
campesino_origen = noone;
convierte = false;
veneno = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var vdlt = dlt;
dlt = dltg;
s_ani_osci(id, 0, 1.8, 7);
dlt = vdlt;

if !audio_is_playing(a_latido) {
    audio_play_sound_at(a_latido, x, y, -m_proy_altura,
        32, m_audio_distance, 1, false, 17);
}

if veneno { // solo vampiro se intoxica
    var ggg = min(m_vampi_succion * dltg, campesino_sangre, sangre);
    campesino_sangre -= ggg;
    stats[0] += ggg;
    s_sangre(-ggg, false);
    if campesino_sangre &lt;= 0 {
        var aux = instance_create(x, y + 24, o_muerto);
        aux.genero = campesino;
        stats[2]++;
        if sangre == 0 {
            aux = instance_create(x, y, o_muerto);
            aux.genero = -1;
            aux.pies = 2;
            aux.cabeza = 0;
        }
        else {
            instance_create(x, y - 24, o_vampiro);
        }
        instance_destroy();
    }
    else if sangre == 0 {
        var aux = instance_create(x, y + 24, o_campesino);
        aux.genero = campesino;
        aux.vida = campesino_sangre;
        aux.origen = campesino_origen;
        aux.gritar = false;
        aux = instance_create(x, y, o_muerto);
        aux.genero = -1;
        aux.pies = 2;
        aux.cabeza = 0;
        instance_destroy();
    }
}
else { // lo normal
    var ggg = min(m_vampi_succion * dltg, campesino_sangre,
        m_vampi_sangre - sangre);
    campesino_sangre -= ggg;
    stats[0] += ggg;
    if campesino == m_gen_inf or campesino == m_gen_vie {
        s_sangre(ggg * m_vampi_pocoalim, true);
    }
    else {
        s_sangre(ggg, true);
    }
    if campesino_sangre &lt;= 0 {
        stats[2]++;
        var aux;
        if convierte {
            aux = instance_create(x, y + 24, o_zombi);
            if esman {
                audio_play_sound_at(vz_vampi_zombi, x, y, -m_proy_altura,
                    32, m_audio_distance, 1, false, 16);
            }
            else {
                audio_play_sound_at(vz_vampa_zombi, x, y, -m_proy_altura,
                    32, m_audio_distance, 1, false, 16);
            }
        }
        else {
            aux = instance_create(x, y + 24, o_muerto);
        }
        aux.genero = campesino;
        switch forma {
            case 0: instance_create(x, y - 24, o_vampiro); break;
            case 1: instance_create(x, y - 24, o_espectro); break;
            case 2: instance_create(x, y - 24, o_bestia); break;
        }
        instance_destroy();
    }
    else if sangre &gt;= m_vampi_sangre or (forma == 1 and
            campesino_sangre &lt;= m_hum_sangre * m_vampi_dejavivo) {
        if sangre &gt; m_vampi_sangre {
            sangre = m_vampi_sangre;
        }
        if forma == 2 { // bestia mata
            var aux = instance_create(x, y + 24, o_muerto);
            aux.genero = campesino;
            stats[2]++;
        }
        else {
            var aux = instance_create(x, y + 24, o_campesino);
            aux.genero = campesino;
            aux.vida = campesino_sangre;
            aux.origen = campesino_origen;
            aux.gritar = false;
        }
        switch forma {
            case 0: instance_create(x, y - 24, o_vampiro); break;
            case 1: instance_create(x, y - 24, o_espectro); break;
            case 2: instance_create(x, y - 24, o_bestia); break;
        }
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if view_current != 0 { exit; }
// pies zombi
// pies campesino
// cuerpo zombi
// cuerpo campesino
// cabeza campesino
// cabeza zombi
switch campesino {
    case m_gen_muj:
        switch forma {
            case 0: // vampiro
                draw_sprite(d_chupa, 25, x, y);
                draw_sprite(d_chupa, 24, x, y);
                if esman {
                    draw_sprite(d_chupa, 7, x, y);
                }
                else {
                    draw_sprite(d_chupa, 31, x, y);
                }
                draw_sprite(d_chupa, 10, x, y);
                draw_sprite(d_chupa, 0, x, y);
                if esman {
                    draw_sprite(d_chupa, 14, x, y);
                }
                else {
                    draw_sprite(d_chupa, 30, x, y);
                }
                break;
            case 1: // espectro
                // sin pies
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 6, x, y);
                draw_sprite(d_chupa, 10, x, y);
                draw_sprite(d_chupa, 0, x, y);
                draw_sprite(d_chupa, 13, x, y);
                break;
            case 2: // bestia
                draw_sprite(d_chupa, 27, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 5, x, y);
                draw_sprite(d_chupa, 10, x, y);
                draw_sprite(d_chupa, 0, x, y);
                draw_sprite(d_chupa, 12, x, y);
                break;
        }
        break;
    case m_gen_hom:
        switch forma {
            case 0: // vampiro
                draw_sprite(d_chupa, 25, x, y);
                draw_sprite(d_chupa, 24, x, y);
                if esman {
                    draw_sprite(d_chupa, 7, x, y);
                }
                else {
                    draw_sprite(d_chupa, 31, x, y);
                }
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 1, x, y);
                if esman {
                    draw_sprite(d_chupa, 14, x, y);
                }
                else {
                    draw_sprite(d_chupa, 30, x, y);
                }
                break;
            case 1: // espectro
                // sin pies
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 6, x, y);
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 1, x, y);
                draw_sprite(d_chupa, 13, x, y);
                break;
            case 2: // bestia
                draw_sprite(d_chupa, 27, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 5, x, y);
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 1, x, y);
                draw_sprite(d_chupa, 12, x, y);
                break;
        }
        break;
    case m_gen_inf:
        switch forma {
            case 0: // vampiro
                draw_sprite(d_chupa, 25, x, y);
                draw_sprite(d_chupa, 29, x, y);
                if esman {
                    draw_sprite(d_chupa, 7, x, y);
                }
                else {
                    draw_sprite(d_chupa, 31, x, y);
                }
                draw_sprite(d_chupa, 21, x, y);
                draw_sprite(d_chupa, 2, x, y);
                if esman {
                    draw_sprite(d_chupa, 14, x, y);
                }
                else {
                    draw_sprite(d_chupa, 30, x, y);
                }
                break;
            case 1: // espectro
                // sin pies
                draw_sprite(d_chupa, 29, x, y + anima[0]);
                draw_sprite(d_chupa, 6, x, y + anima[0]);
                draw_sprite(d_chupa, 21, x, y + anima[0]);
                draw_sprite(d_chupa, 2, x, y + anima[0]);
                draw_sprite(d_chupa, 13, x, y + anima[0]);
                break;
            case 2: // bestia
                draw_sprite(d_chupa, 27, x, y);
                draw_sprite(d_chupa, 29, x, y);
                draw_sprite(d_chupa, 5, x, y);
                draw_sprite(d_chupa, 21, x, y);
                draw_sprite(d_chupa, 2, x, y);
                draw_sprite(d_chupa, 12, x, y);
                break;
        }
        break;
    case m_gen_vie:
        switch forma {
            case 0: // vampiro
                draw_sprite(d_chupa, 25, x, y);
                draw_sprite(d_chupa, 24, x, y);
                if esman {
                    draw_sprite(d_chupa, 7, x, y);
                }
                else {
                    draw_sprite(d_chupa, 31, x, y);
                }
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 3, x, y);
                if esman {
                    draw_sprite(d_chupa, 14, x, y);
                }
                else {
                    draw_sprite(d_chupa, 30, x, y);
                }
                break;
            case 1: // espectro
                // sin pies
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 6, x, y);
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 3, x, y);
                draw_sprite(d_chupa, 13, x, y);
                break;
            case 2: // bestia
                draw_sprite(d_chupa, 27, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 5, x, y);
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 3, x, y);
                draw_sprite(d_chupa, 12, x, y);
                break;
        }
        break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
