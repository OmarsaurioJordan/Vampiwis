<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_player</parentName>
  <maskName>d_base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// osci: 0:cuerpo, 1:cabeza
// paso: 0:pies
s_ani_ini(id, 2, 1);
reloj_pies = 0;

dir_embiste = point_direction(x, y, o_mouse.x, o_mouse.y);;
reloj_embiste = m_vampi_embiste_s;

xi = x;
yi = y;

reloj_espejo = 0; // inutil, evita error

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// animacion
if luna == 2 and !s_dia() {
    s_ani_osci(id, 0, 1.5, 8); // body
    s_ani_osci(id, 1, 1.2, 6); // cara
}
else {
    s_ani_osci(id, 0, 2.5, 5); // body
    s_ani_osci(id, 1, 2.2, 3); // cara
}
s_ani_paso(id, 0, 0.1, 5); // pies

if o_control.ver_literatura != -1 {
    exit;
}

// cambio de mira
reloj_embiste -= dlt;
if reloj_embiste &lt;= 0 {
    reloj_embiste = m_vampi_embiste_s;
    dir_embiste = point_direction(x, y, o_mouse.x, o_mouse.y);
}

// colision solidos
var otro = instance_place(x, y, o_bloque);
if otro != noone {
    direction = point_direction(otro.x, otro.y, x, y);
    direction -= s_rebote(id, direction);
    var vel = m_vampi_embiste * dlt;
    x += lengthdir_x(vel, direction);
    y += lengthdir_y(vel, direction);
}
else {
    // manejo player
    var vel = m_vampi_embiste * dlt;
    x += lengthdir_x(vel, dir_embiste);
    y += lengthdir_y(vel, dir_embiste);
}

// limites
s_limites(id);

// anima pies
if x == xprevious and y == yprevious {
    reloj_pies = max(0, reloj_pies - dlt);
}
else {
    reloj_pies = 0.25;
}

// chupa sangre
if !s_dia() and sangre &lt;= m_vampi_sangre * 0.75 and o_control.reloj_nocome == 0 {
    var otro = collision_circle(x, y, m_areachupa, o_humano, true, false);
    if otro != noone {
        if otro.rol != m_rol_espada {
            var com = instance_create(otro.x, otro.y, o_come);
            com.campesino = otro.genero;
            com.campesino_sangre = otro.vida;
            com.campesino_origen = otro.origen;
            com.forma = 2;
            with otro {
                instance_destroy();
            }
            instance_destroy();
            exit;
        }
    }
}

// transformacion
if s_boton(1) {
    if s_sangre(-m_cost_transform, true) {
        s_vapor(m_vapor_parti, x, y, m_vapor_radio);
        if esman {
            audio_play_sound_at(vz_vampi_transform, x, y, -m_proy_altura,
                32, m_audio_distance, 1, false, 19);
        }
        else {
            audio_play_sound_at(vz_vampa_transform, x, y, -m_proy_altura,
                32, m_audio_distance, 1, false, 19);
        }
        instance_create(x, y, o_vampiro);
        instance_destroy();
    }
}
// redireccionamiento
else if s_boton(0) {
    var ggg = m_cost_dirigir * (reloj_embiste / m_vampi_embiste_s);
    if luna == 2 and !s_dia() {
        ggg *= m_vampi_bonusluna;
    }
    if s_sangre(-ggg, true) {
        reloj_embiste = m_vampi_embiste_s;
        dir_embiste = point_direction(x, y, o_mouse.x, o_mouse.y);
        audio_play_sound_at(a_bestia, x, y, -m_proy_altura,
            32, m_audio_distance, 1, false, 15);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if view_current != 0 { exit; }
// pies
if reloj_pies == 0 {
    draw_sprite(d_ente, 35, xi, yi);
    draw_sprite(d_ente, 36, xi, yi);
}
else {
    var p1, p2;
    switch paso[0] {
        case 0: p1 = 0; p2 = 1; break;
        case 1: p1 = 0.3; p2 = 0.7; break;
        case 2: p1 = 0.7; p2 = 0.3; break;
        case 3: p1 = 1; p2 = 0; break;
        case 4: p1 = 0.7; p2 = 0.3; break;
        case 5: p1 = 0.3; p2 = 0.7; break;
    }
    draw_sprite(d_ente, 35, xi, yi - p1 * 12);
    draw_sprite(d_ente, 36, xi, yi - p2 * 12);
}

// cuerpo
draw_sprite(d_ente, 34, xi, yi + anima[0]);

// cabeza
draw_sprite(d_ente, 33, xi, yi + anima[0] + anima[1]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
