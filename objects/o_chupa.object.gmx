<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_cosagame</parentName>
  <maskName>d_base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
campesino = choose(1, 1, 1, 0, 0, 0, 0, 2, 3);
zombi = choose(1, 1, 1, 0, 0, 0, 0, 2, 3);
campesino_sangre = m_hum_sangre;
zombi_sangre = m_hum_sangre / 2;
campesino_origen = noone;
zombi_origen = noone;
veneno = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if veneno {
    var ggg = min(m_hum_succion * dlt, campesino_sangre, zombi_sangre);
    campesino_sangre -= ggg;
    zombi_sangre -= ggg;
    if campesino_sangre &lt;= 0 {
        var aux = instance_create(x, y + 24, o_muerto);
        aux.genero = campesino;
        if zombi_sangre &lt;= 0 {
            aux = instance_create(x, y - 24, o_muerto);
            aux.genero = zombi;
            aux.es_zombi = true;
        }
        else {
            aux = instance_create(x, y - 24, o_zombi);
            aux.genero = zombi;
            aux.aliento = zombi_sangre;
            aux.origen = zombi_origen;
        }
        instance_destroy();
    }
    else if zombi_sangre &lt;= 0 {
        var aux = instance_create(x, y + 24, o_campesino);
        aux.genero = campesino;
        aux.vida = campesino_sangre;
        aux.origen = campesino_origen;
        aux.gritar = false;
        aux = instance_create(x, y - 24, o_muerto);
        aux.genero = zombi;
        aux.es_zombi = true;
        instance_destroy();
    }
}
else {
    var ggg = min(m_hum_succion * dlt, campesino_sangre,
        m_hum_sangre - zombi_sangre);
    campesino_sangre -= ggg;
    if campesino == m_gen_inf or campesino == m_gen_vie {
        zombi_sangre += ggg * m_vampi_pocoalim;
    }
    else {
        zombi_sangre += ggg;
    }
    if campesino_sangre &lt;= 0 {
        var aux;
        if dia &lt; 50 {
            aux = instance_create(x, y + 24, o_muerto);
        }
        else {
            aux = instance_create(x, y + 24, o_zombi);
        }
        aux.genero = campesino;
        aux = instance_create(x, y - 24, o_zombi);
        aux.genero = zombi;
        aux.aliento = zombi_sangre;
        aux.origen = zombi_origen;
        instance_destroy();
    }
    else if zombi_sangre &gt;= m_hum_sangre {
        zombi_sangre = m_hum_sangre;
        var aux = instance_create(x, y + 24, o_campesino);
        aux.genero = campesino;
        aux.vida = campesino_sangre;
        aux.origen = campesino_origen;
        aux.gritar = false;
        aux = instance_create(x, y - 24, o_zombi);
        aux.genero = zombi;
        aux.aliento = zombi_sangre;
        aux.origen = zombi_origen;
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if view_current != 0 { exit; }
// pies zombi
// pies campesino
// cuerpo zombi
// cuerpo campesino
// cabeza campesino
// cabeza zombi
switch campesino {
    case m_gen_muj:
        switch zombi {
            case m_gen_muj:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 8, x, y);
                draw_sprite(d_chupa, 10, x, y);
                draw_sprite(d_chupa, 0, x, y);
                draw_sprite(d_chupa, 15, x, y);
                break;
            case m_gen_hom:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 9, x, y);
                draw_sprite(d_chupa, 10, x, y);
                draw_sprite(d_chupa, 0, x, y);
                draw_sprite(d_chupa, 16, x, y);
                break;
            case m_gen_inf:
                draw_sprite(d_chupa, 28, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 20, x, y);
                draw_sprite(d_chupa, 10, x, y);
                draw_sprite(d_chupa, 0, x, y);
                draw_sprite(d_chupa, 17, x, y);
                break;
            case m_gen_vie:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 9, x, y);
                draw_sprite(d_chupa, 10, x, y);
                draw_sprite(d_chupa, 0, x, y);
                draw_sprite(d_chupa, 18, x, y);
                break;
        }
        break;
    case m_gen_hom:
        switch zombi {
            case m_gen_muj:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 8, x, y);
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 1, x, y);
                draw_sprite(d_chupa, 15, x, y);
                break;
            case m_gen_hom:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 9, x, y);
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 1, x, y);
                draw_sprite(d_chupa, 16, x, y);
                break;
            case m_gen_inf:
                draw_sprite(d_chupa, 28, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 20, x, y);
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 1, x, y);
                draw_sprite(d_chupa, 17, x, y);
                break;
            case m_gen_vie:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 9, x, y);
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 1, x, y);
                draw_sprite(d_chupa, 18, x, y);
                break;
        }
        break;
    case m_gen_inf:
        switch zombi {
            case m_gen_muj:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 29, x, y);
                draw_sprite(d_chupa, 8, x, y);
                draw_sprite(d_chupa, 21, x, y);
                draw_sprite(d_chupa, 2, x, y);
                draw_sprite(d_chupa, 15, x, y);
                break;
            case m_gen_hom:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 29, x, y);
                draw_sprite(d_chupa, 9, x, y);
                draw_sprite(d_chupa, 21, x, y);
                draw_sprite(d_chupa, 2, x, y);
                draw_sprite(d_chupa, 16, x, y);
                break;
            case m_gen_inf:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 22, x, y);
                draw_sprite(d_chupa, 23, x, y);
                draw_sprite(d_chupa, 4, x, y);
                draw_sprite(d_chupa, 19, x, y);
                break;
            case m_gen_vie:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 29, x, y);
                draw_sprite(d_chupa, 9, x, y);
                draw_sprite(d_chupa, 21, x, y);
                draw_sprite(d_chupa, 2, x, y);
                draw_sprite(d_chupa, 18, x, y);
                break;
        }
        break;
    case m_gen_vie:
        switch zombi {
            case m_gen_muj:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 8, x, y);
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 3, x, y);
                draw_sprite(d_chupa, 15, x, y);
                break;
            case m_gen_hom:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 9, x, y);
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 3, x, y);
                draw_sprite(d_chupa, 16, x, y);
                break;
            case m_gen_inf:
                draw_sprite(d_chupa, 28, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 20, x, y);
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 3, x, y);
                draw_sprite(d_chupa, 17, x, y);
                break;
            case m_gen_vie:
                draw_sprite(d_chupa, 26, x, y);
                draw_sprite(d_chupa, 24, x, y);
                draw_sprite(d_chupa, 9, x, y);
                draw_sprite(d_chupa, 11, x, y);
                draw_sprite(d_chupa, 3, x, y);
                draw_sprite(d_chupa, 18, x, y);
                break;
        }
        break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
